
services:
  warehouse-db:
    image: hubi0295/warehouseapp:warehouse-db-v3
    pull_policy: always
    container_name: warehouse
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  eureka:
    image: hubi0295/warehouseapp:eureka-service-v2
    pull_policy: always
    container_name: eureka-service
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      - warehouse-db

  gateway:
    image: hubi0295/warehouseapp:gateway-service-v3
    pull_policy: always
    container_name: gateway-service
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      eureka:
        condition: service_healthy
  auth:
    image: hubi0295/warehouseapp:auth-service-v4
    pull_policy: always
    container_name: auth-service
    ports:
      - "9876:9876"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9876/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      gateway:
        condition: service_healthy
  warehouse:
    image: hubi0295/warehouseapp:warehouse-service-v5
    pull_policy: always
    container_name: warehouse-service
    ports:
      - "9880:9880"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9880/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      auth:
        condition: service_healthy
  contractor:
    image: hubi0295/warehouseapp:contractor-service-v4
    pull_policy: always
    container_name: contractor-service
    ports:
      - "9877:9877"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9877/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      warehouse:
        condition: service_healthy
  product:
    image: hubi0295/warehouseapp:product-service-v5
    pull_policy: always
    container_name: product-service
    ports:
      - "9878:9878"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9878/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      contractor:
        condition: service_healthy
  product-service:
    image: hubi0295/warehouseapp:product-service-service-v4
    pull_policy: always
    container_name: product-service-service
    ports:
      - "9879:9879"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9879/actuator/health"]
      interval: 10s
      retries: 15
      start_period: 20s
      timeout: 5s
    depends_on:
      product:
        condition: service_healthy
  warehouse-backup:
    image: postgres:16
    container_name: warehouse-backup
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: inzynierka
      PGPASSWORD: inzynierka
    ports:
      - "55432:5432"
    volumes:
      - pgbackup:/var/lib/postgresql/data
      - ./init_data.sql:/init_data.sql:ro
      - ./init_and_backup.sh:/init_and_backup.sh:ro
      - ./db_sync.sh:/db_sync.sh:ro
    depends_on:
      product-service:
        condition: service_healthy
    entrypoint: ["/bin/bash", "/init_and_backup.sh"]
  frontend:
    image: szumiik/magazynex-frontend:latest
    
    ports:
      - "4200:80"
    depends_on:
      product-service:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  pgbackup:

